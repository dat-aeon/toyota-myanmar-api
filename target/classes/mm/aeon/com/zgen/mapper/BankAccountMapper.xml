<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mm.aeon.com.zgen.mapper.BankAccountMapper">
  <resultMap id="BaseResultMap" type="mm.aeon.com.zgen.entity.BankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_no" jdbcType="VARCHAR" property="accountNo" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="swift_code" jdbcType="VARCHAR" property="swiftCode" />
    <result column="branch_name" jdbcType="VARCHAR" property="branchName" />
    <result column="bank_address" jdbcType="VARCHAR" property="bankAddress" />
    <result column="disabled" jdbcType="BIT" property="disabled" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
    <result column="created_date" jdbcType="TIME" property="createdDate" />
    <result column="updated_date" jdbcType="TIME" property="updatedDate" />
    <result column="delete_flg" jdbcType="BIT" property="deleteFlg" />
    <result column="currency_type" jdbcType="VARCHAR" property="currencyType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, account_no, bank_name, swift_code, branch_name, bank_address, disabled, created_by, 
    updated_by, created_date, updated_date, delete_flg, currency_type
  </sql>
  <select id="selectByExample" parameterType="mm.aeon.com.zgen.entity.BankAccountExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.bank_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.bank_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public.bank_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="mm.aeon.com.zgen.entity.BankAccountExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public.bank_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mm.aeon.com.zgen.entity.BankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.bank_account (id, account_no, bank_name, 
      swift_code, branch_name, bank_address, 
      disabled, created_by, updated_by, 
      created_date, updated_date, delete_flg, 
      currency_type)
    values (#{id,jdbcType=INTEGER}, #{accountNo,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, 
      #{swiftCode,jdbcType=VARCHAR}, #{branchName,jdbcType=VARCHAR}, #{bankAddress,jdbcType=VARCHAR}, 
      #{disabled,jdbcType=BIT}, #{createdBy,jdbcType=INTEGER}, #{updatedBy,jdbcType=INTEGER}, 
      #{createdDate,jdbcType=TIME}, #{updatedDate,jdbcType=TIME}, #{deleteFlg,jdbcType=BIT}, 
      #{currencyType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="mm.aeon.com.zgen.entity.BankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.bank_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountNo != null">
        account_no,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="swiftCode != null">
        swift_code,
      </if>
      <if test="branchName != null">
        branch_name,
      </if>
      <if test="bankAddress != null">
        bank_address,
      </if>
      <if test="disabled != null">
        disabled,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="updatedDate != null">
        updated_date,
      </if>
      <if test="deleteFlg != null">
        delete_flg,
      </if>
      <if test="currencyType != null">
        currency_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountNo != null">
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="swiftCode != null">
        #{swiftCode,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null">
        #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null">
        #{bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
        #{disabled,jdbcType=BIT},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIME},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIME},
      </if>
      <if test="deleteFlg != null">
        #{deleteFlg,jdbcType=BIT},
      </if>
      <if test="currencyType != null">
        #{currencyType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mm.aeon.com.zgen.entity.BankAccountExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from public.bank_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.bank_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountNo != null">
        account_no = #{record.accountNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.swiftCode != null">
        swift_code = #{record.swiftCode,jdbcType=VARCHAR},
      </if>
      <if test="record.branchName != null">
        branch_name = #{record.branchName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAddress != null">
        bank_address = #{record.bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.disabled != null">
        disabled = #{record.disabled,jdbcType=BIT},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=INTEGER},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIME},
      </if>
      <if test="record.updatedDate != null">
        updated_date = #{record.updatedDate,jdbcType=TIME},
      </if>
      <if test="record.deleteFlg != null">
        delete_flg = #{record.deleteFlg,jdbcType=BIT},
      </if>
      <if test="record.currencyType != null">
        currency_type = #{record.currencyType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.bank_account
    set id = #{record.id,jdbcType=INTEGER},
      account_no = #{record.accountNo,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      swift_code = #{record.swiftCode,jdbcType=VARCHAR},
      branch_name = #{record.branchName,jdbcType=VARCHAR},
      bank_address = #{record.bankAddress,jdbcType=VARCHAR},
      disabled = #{record.disabled,jdbcType=BIT},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      updated_by = #{record.updatedBy,jdbcType=INTEGER},
      created_date = #{record.createdDate,jdbcType=TIME},
      updated_date = #{record.updatedDate,jdbcType=TIME},
      delete_flg = #{record.deleteFlg,jdbcType=BIT},
      currency_type = #{record.currencyType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mm.aeon.com.zgen.entity.BankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.bank_account
    <set>
      <if test="accountNo != null">
        account_no = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="swiftCode != null">
        swift_code = #{swiftCode,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null">
        branch_name = #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null">
        bank_address = #{bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="disabled != null">
        disabled = #{disabled,jdbcType=BIT},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIME},
      </if>
      <if test="updatedDate != null">
        updated_date = #{updatedDate,jdbcType=TIME},
      </if>
      <if test="deleteFlg != null">
        delete_flg = #{deleteFlg,jdbcType=BIT},
      </if>
      <if test="currencyType != null">
        currency_type = #{currencyType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="mm.aeon.com.zgen.entity.BankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.bank_account
    set account_no = #{accountNo,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      swift_code = #{swiftCode,jdbcType=VARCHAR},
      branch_name = #{branchName,jdbcType=VARCHAR},
      bank_address = #{bankAddress,jdbcType=VARCHAR},
      disabled = #{disabled,jdbcType=BIT},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      created_date = #{createdDate,jdbcType=TIME},
      updated_date = #{updatedDate,jdbcType=TIME},
      delete_flg = #{deleteFlg,jdbcType=BIT},
      currency_type = #{currencyType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="mm.aeon.com.zgen.entity.BankAccountExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.bank_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>